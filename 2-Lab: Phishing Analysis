# Lab 2: Phishing Analysis

**Category:** Security Operations

---

## Tools Required

- Linux Terminal
- Basic Linux commands (`cat`, `grep`)
- Virtual Machine (VM) with NAT network (never share folders with your real host)
- Text editor (VS Code, nano, etc.)

---

## Overview

In this lab, you will analyze a phishing email saved as a `.eml` file. The email appears legitimate but contains malicious elements intended to deceive the recipient. You will learn to identify telltale signs of phishing and safely investigate suspicious content.

---

## Step 1: Safe Email Inspection

**Never open suspicious emails in a real email client!**  
Instead, view the file using safe command-line tools:

```bash
cat file.eml | less
```

To find the sender (who sent the email):

```bash
grep -i '^From:' file.eml
```

---

## Step 2: Identify the Recipient

To locate the recipient:

```bash
grep -i '^To:' file.eml
```

Review the full email to understand the attack scenario and target.

---

## Step 3: Header Analysis

Email headers reveal valuable information about sender, recipient, servers, and possible spoofing attempts.  
Look for headers such as `From:`, `To:`, `Subject:`, `Received:`, and `Reply-To:`.  
Check for inconsistencies or suspicious domains—phishing attacks often use domains that mimic real organizations (e.g., Amazon, PayPal) but are slightly different.

---

## Step 4: Extract the Date

To view the date the email was sent:

```bash
grep -i '^Date:' file.eml
```

Example output:

```
Date: Wed, 19 Jun 2019 04:30:23 +0900
```

---

## Step 5: Decode Encoded Content

Phishing emails may hide malicious HTML in Base64-encoded blocks.  
1. Locate the encoded section in the `.eml` file.
2. Copy and decode it using local tools (`base64 -d`) or online tools like [CyberChef](https://gchq.github.io/CyberChef/).
3. Analyze the decoded HTML for suspicious links, buttons, or scripts.

Pay special attention to `<a>` tags masquerading as action buttons and links to credential-stealing sites.

---

## Step 6: Investigate Links and External Resources

Identify all URLs embedded in the email or decoded HTML.  
- Check if the links are active using screenshot services (e.g., url2png) instead of visiting them directly.
- Inspect logos or images—often sourced from free image banks.
- Look for fake social media support accounts; these are commonly used in phishing.

---

## Summary

This lab demonstrates a typical phishing scenario:  
Attackers create urgency (“Action required” or “Account locked”) and embed multiple Base64-encoded sections containing HTML with fraudulent links and fake support options.  
Some links are designed to steal credentials, while others may redirect to attacker-controlled social media accounts.

**Security Recommendations:**
- Never click links or open attachments from suspicious emails.
- Always analyze headers and content before interacting.
- Use virtual machines and safe tools for all investigations.
