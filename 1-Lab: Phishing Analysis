# First Lab: Phishing Analysis

## üõ†Ô∏è Tools Needed
- **Virtual Machine (VM)** with NAT connection (recommended: Linux)
- **Terminal**
- **Basic Linux Commands**

---

## üïµÔ∏è Case Overview

In this beginner-friendly lab, you'll analyze a suspicious email file (`.eml` extension). This is typically used to store email messages, and may potentially contain phishing content.

---

## üí° Step-by-Step Solution

### 1. **Environment Setup**
Make sure your VM is properly configured, ideally with a NAT connection for both internet access and security isolation from your main computer.

**Tip:** Download your lab files into a dedicated folder, usually as a `.zip`. Extract the archive, and you‚Äôll find the email file‚Äîlet‚Äôs call it `EmailLegite` for this example.

### 2. **Explore the File**
Open your terminal and navigate to the analysis folder:

```bash
cd Downloads/lab/analysis
```
Check the file type:
```bash
file EmailLegite
```
If it‚Äôs a valid email, you‚Äôll see output like:
```
Website contact form submission.eml: SMTP mail, ASCII text, with very long lines (429), with CRLF line terminators
```

---

### 3. **Analyze the Email Contents**

#### **A. Find the Primary Recipient**
Use `cat` to display the email and examine headers:
```bash
cat EmailLegite
```
Look for the recipient field (e.g., `2222:a0c:aa16:0:0:0:0:0`).

#### **B. Identify the Subject**
Extract the subject using `grep`:
```bash
grep -i "^Subject:" EmailLegite
```
Example output:
```
Subject: Contact important
```

#### **C. Get the Date**
Search for the date:
```bash
grep "^Date:" EmailLegite
```
Or read through with `cat` for context.

#### **D. Find the Originating IP Address**
Use `grep` to locate the IP:
```bash
grep -i "Received:" EmailLegite
```
Example (not lab answer): `Receiver IP: 102,10.10`

#### **E. Discover the Hostname**
Search for hostname mentions:
```bash
grep -i "Hostname" EmailLegite
```
Example output:
```
X-AntiAbuse: Primary Hostname - c9s0-4w-zae.hosting-services.net.au
```

#### **F. Spot URLs**
Find links using `grep`:
```bash
grep -o 'http[s]*://[^"]*' EmailLegite
```
Review URLs to see where they're hosted (e.g., Blogspot).

---

### 4. **File Management and Confirmation**
List files in your folder:
```bash
ls
```
Check file types:
```bash
file {NameOfFile}
```

---

## üìù Summary

This is a classic phishing email‚Äîdesigned to trick victims into clicking a link and submitting sensitive information. Although the email may appear legitimate, clicking the embedded link redirects you to a fake page crafted to steal your credentials.

**Remember:**  
- Always analyze suspicious emails in a safe environment (VM).
- Use terminal commands to inspect headers and links.
- Stay cautious when handling unknown files or clicking links.

---

**Stay safe and keep analyzing!**
        

        

     

        
        
